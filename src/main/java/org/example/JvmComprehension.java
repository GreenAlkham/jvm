package org.example;

//При объявлении класса в Metaspace загружеается информация о классе JvmComprehension со всеми системными классами
// при помощи загрузчика классов (Class Loader) и создаётся новый стек класса JvmComprehension.
public class JvmComprehension {

//В момент вызова метода main в стеке класса JvmComprehension создаются фрейм этого метода по принципу LIFO
// (Last In First Out).
    public static void main(String[] args) {
        int i = 1;                      // 1
        Object o = new Object();        // 2
        Integer ii = 2;                 // 3
        printAll(o, i, ii);             // 4
        System.out.println("finished"); // 7
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5
        System.out.println(o.toString() + i + ii);  // 6
    }
}

//1 - При объявлении переменной int i = 1; под неё выделяется место в стеке в фрейме main.
// Т.к. int - примитивный тип данных, его значение (число 1) хранится прямо в стеке.

//2 - При создании нового объекта Object o = new Object(); последовательно выполняются следующие действия:
//2.1. Cначала выполняется оператор new - в куче выделяется место для нового объекта
//2.2. затем вызывается конструктор Object() - в выделенной области памяти в куче выполняется инициализация
// конструктора Object() (действия этого конструктора)
//2.3. Возвращается ссылка на ячейку в памяти new Object();
//2.4. В стеке создаётся переменная o со ссылкой на new Object(); в куче

// 3 - Integer - ссылочный типа данных. Переменная Integer ii хранится в стеке,
// а для получения его значения создается ссылка на heap.

//4 - Выполняется вызов метода printAll - в стеке класса JvmComprehension создаются фреймы этих методов по принципу LIFO
// (Last In First Out). У метода есть входные параметры - Object o, int i, Integer ii.

//7 - Создастся новый фрейм в стеке, куда передастся ссылка на объект со значением "finished"

//5 - В стеке printAll создается переменная Integer uselessVar = 700;
// Т.к. данная переменная больше не используется (на него никто не ссылается и он является недостижимым),
// то данный объект будет удален сборщиком мусора

//6 - Создастся новый фрейм в стеке, куда передастся ссылки на объекты o, i и ii в куче

//Когда выполнение блока кода завершается, все объекты, созданные в этом блоке и не связанные с внешними ссылками,
// также становятся недоступными.